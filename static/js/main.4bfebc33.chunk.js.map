{"version":3,"sources":["helpers.js","bus/todos/types.js","bus/todos/reducer.js","init/rootReducer.js","init/middleware.js","init/store.js","bus/todos/actions.js","bus/todos/index.js","view/pages/components/NewTaskButton/NewTaskButton.js","view/pages/components/Todo/Todo.js","view/shapes/TodoShape.js","view/pages/components/TodoList/TodoList.js","view/pages/components/AddTodoForm/TitleInput/TitleInput.js","view/pages/components/AddTodoForm/DescriptionInput/DescriptionInput.js","view/pages/components/AddTodoForm/DeadlineInput/DeadlineInput.js","view/pages/components/AddTodoForm/CompleteInput/CompleteInput.js","view/pages/components/AddTodoForm/Checklist/Checklist.js","view/pages/components/AddTodoForm/TagBlock/TagBlock.js","view/pages/components/AddTodoForm/SubmitButtons/SubmitButtons.js","view/pages/components/AddTodoForm/AddTodoForm.js","view/pages/components/TodoEditing/TitleInput/TitleInput.js","view/pages/components/TodoEditing/DescriptionInput/DescriptionInput.js","view/pages/components/TodoEditing/DeadlineInput/DeadlineInput.js","view/pages/components/TodoEditing/CompleteInput/CompleteInput.js","view/pages/components/TodoEditing/Checklist/Checklist.js","view/pages/components/TodoEditing/TagBlock/Tagblock.js","view/pages/components/TodoEditing/SubmitButtons/SubmitButtons.js","view/pages/components/TodoEditing/TodoEditing.js","view/pages/components/TodoAppBody/TodoAppBody.js","view/pages/App.js","index.js"],"names":["todaysDate","require","moment","format","formKeyDown","event","keyCode","preventDefault","TODOS_FILL","SET_INITIAL_STATE","SET_TITLE_WARNING","SET_TAG_FIELD_WARNING","SET_SUBTASKS_WARNING","SET_DEADLINE_WARNING","SHOW_NEW_TASK_FORM","CHOOSE_COMPLETE_STATUS","CHANGE_TITLE_INPUT_TEXT","CHANGE_DESCRIPTION_INPUT_TEXT","GET_DEADLINE_DATE","RESET_FORM","SET_SUBTASK_COMPLETE_STATUS","CHANGE_SUBTASK_INPUT_TEXT","CHANGE_SELECTED_SUBTASK_TEXT","CHANGE_SUBTASK_LIST","CHANGE_SELECTED_SUBTASK_COMPLETE_STATUS","SET_TAG","GET_TODO_INFO","SHOW_TODO_INFO","SET_COMPLETE_STATUS_FOR_SELECTED_TODO","CHANGE_TITLE_FOR_SELECTED_TODO","CHANGE_DEADLINE_FOR_SELECTED_TODO","CHANGE_DESCRIPTION_FOR_SELECTED_TODO","CHANGE_TODO_INFO","CHANGE_TODO_SUBTASK_LIST","CHANGE_TODO_SUBTASK_INPUT_TEXT","SET_TODO_SUBTASK_COMPLETE_STATUS","CHANGE_TODO_TAG","RESET_EDITING_SELECTED_TODO_FORM","initialState","todoList","visibleNewTaskForm","completeStatus","titleInputText","descriptionInputText","deadlineDate","warnings","titleWarning","tagFieldWarning","subtasksWarning","deadlineWarning","subtasks","subtaskList","id","title","complete","subtaskInputText","subtaskCompleteStatus","selectedSubtaskText","tag","todoInfo","description","deadline","subtaskText","completed","selectedSubtaskCompleteStatus","todoTag","visibilityTodoInfo","rootReducer","combineReducers","todo","state","action","type","payload","composeEnhancers","createLogger","duration","collapsed","colors","error","prevState","nextState","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","applyMiddleware","todoActions","Object","freeze","todosFillAction","setInitialStateAction","setTitleWarningAction","setTagFieldwarningAction","setSaubtasksWarningAction","setDeadlineWarningAction","setVisibleNewTaskFormAction","setCompleteStatusAction","changeTitleInputTextAction","changeDescriptionInputTextAction","getDeadlineDateAction","changeSubtaskInputTextAction","setSubtaskCompleteStatusAction","changeSelectedSubtaskTextAction","changeSelectedSubtaskCompleteStatus","changeSubtaskListAction","setTagAction","resetFormAction","getTodoInfoAction","changeVisibilityTodoInfoAction","changeCompleteStatusForSelectedTodoAction","changeTitleForSelectedTodoAction","changeDeadlineForSelectedTodo","changeDescriptionForSelectedTodo","changeTodoInfo","changeTodoSubtaskInputTextAction","setTodoSubtaskCompleteStatusAction","changeTodoSubtaskListAction","changeTodoTagAction","resetEditingSelectedTodoFormAction","useTodos","dispatch","useDispatch","useSelector","addTodo","newTodo","a","newTodoList","resetWarningErrors","showTodoInfo","stopPropagation","selectedTodoInfo","find","changeSelectedTodoInfo","map","length","changeSubtaskList","newSubtaskList","changeTodoSubtaskList","closeForms","addTododFormSubmit","deleteTodo","filter","setExternalCompleteStatus","setCompleteStatus","changeTitleInputText","value","target","changeTitleErrorStatus","changeDescriptionInputText","changeDeadlineDate","resetFormFields","changeSubtaskInputText","setSubtaskCopmpleteStatus","addSubtask","changeSelectedSubtaskText","selectedSubtask","subtask","changeSelectedSubstaskCompleteStatus","setTag","_tag","setVisibleNewTaskForm","setSelectedTodoCompleteStatus","console","log","changeTitleForSelectedTodo","changeDeadlineDateForSelectedTodo","changeTodoSelectedSubtaskText","changeTodoSelectedSubstaskCompleteStatus","changeTodoTag","modifiedTag","addTodoSubtask","resetTodoFormFields","NewTaskButton","className","onClick","PropTypes","number","isRequired","string","bool","Todo","index","transformedDate","tagClasses","classNames","role","htmlFor","checked","onChange","TodoList","todoListClasses","TitleInput","placeholder","DescriptionInput","DeadlineInput","formattedDate","name","min","CompleteInput","checkboxStyle","Checklist","onKeyDown","newSubtaskKeyDown","TagBlock","SubmitButtons","saveButtonClasses","disabled","resetButtonClasses","AddTodoForm","onSubmit","Tagblock","TodoEditing","TodoAppBody","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4bfebc33.chunk.js","sourcesContent":["const moment = require('moment');\n\n// reducer, DeadlineInput, SubmitButton, TodoEditing\nexport const todaysDate = moment().format('YYYY-MM-DD');\n\n// AddTodoForm\nexport const formKeyDown = (event) => {\n  if (event.keyCode === 13) {\n    event.preventDefault();\n  }\n};\n","// General Types\nexport const TODOS_FILL = 'TODOS_FILL';\nexport const SET_INITIAL_STATE = 'SET_INITIAL_STATE';\nexport const SET_TITLE_WARNING = 'SET_TITLE_WARNING';\nexport const SET_TAG_FIELD_WARNING = 'SET_TAG_FIELD_WARNING';\nexport const SET_SUBTASKS_WARNING = 'SET_SUBTASKS_WARNING';\nexport const SET_DEADLINE_WARNING = 'SET_DEADLINE_WARNING';\n\n// AddTodoForm Types\nexport const SHOW_NEW_TASK_FORM = 'SHOW_NEW_TASK_FORM';\nexport const CHOOSE_COMPLETE_STATUS = 'CHOOSE_COMPLETE_STATUS';\nexport const CHANGE_TITLE_INPUT_TEXT = 'CHANGE_TITLE_INPUT_TEXT';\nexport const CHANGE_DESCRIPTION_INPUT_TEXT = 'CHANGE_DESCRIPTION_INPUT_TEXT';\nexport const GET_DEADLINE_DATE = 'GET_DEADLINE_DATE';\nexport const RESET_FORM = 'RESET_FORM';\nexport const SET_SUBTASK_COMPLETE_STATUS = 'SET_SUBTASK_COMPLETE_STATUS';\nexport const CHANGE_SUBTASK_INPUT_TEXT = 'CHANGE_SUBTASK_INPUT_TEXT';\nexport const CHANGE_SELECTED_SUBTASK_TEXT = 'CHANGE_SELECTED_SUBTASK_TEXT';\nexport const CHANGE_SUBTASK_LIST = 'CHANGE_SUBTASK_LIST';\nexport const CHANGE_SELECTED_SUBTASK_COMPLETE_STATUS\n  = 'CHANGE_SELECTED_SUBTASK_COMPLETE_STATUS';\nexport const SET_TAG = 'SET_TAG';\n\n// ChangeTodoInfo Types\nexport const GET_TODO_INFO = 'GET_TODO_INFO';\nexport const SHOW_TODO_INFO = 'SHOW_TODO_INFO';\nexport const SET_COMPLETE_STATUS_FOR_SELECTED_TODO\n  = 'SET_COMPLETE_STATUS_FOR_SELECTED_TODO';\nexport const CHANGE_TITLE_FOR_SELECTED_TODO = 'CHANGE_TITLE_FOR_SELECTED_TODO';\nexport const CHANGE_DEADLINE_FOR_SELECTED_TODO\n  = 'CHANGE_DEADLINE_FOR_SELECTED_TODO';\nexport const CHANGE_DESCRIPTION_FOR_SELECTED_TODO\n  = 'CHANGE_DESCRIPTION_FOR_SELECTED_TODO';\nexport const CHANGE_TODO_INFO = 'CHANGE_TODO_INFO';\nexport const CHANGE_TODO_SUBTASK_LIST = 'CHANGE_TODO_SUBTASK_LIST';\nexport const CHANGE_TODO_SUBTASK_INPUT_TEXT = 'CHANGE_SUBTASK_INPUT_TEXT';\nexport const SET_TODO_SUBTASK_COMPLETE_STATUS\n  = 'SET_TODO_SUBTASK_COMPLETE_STATUS';\nexport const CHANGE_TODO_TAG = 'CHANGE_TODO_TAG';\nexport const RESET_EDITING_SELECTED_TODO_FORM\n  = 'RESET_EDITING_SELECTED_TODO_FORM';\n","import { todaysDate } from '../../helpers';\nimport {\n  // General Types\n  TODOS_FILL,\n  SET_INITIAL_STATE,\n  SET_TITLE_WARNING,\n  SET_TAG_FIELD_WARNING,\n  SET_SUBTASKS_WARNING,\n  SET_DEADLINE_WARNING,\n  // AddTodoForm Types\n  SHOW_NEW_TASK_FORM,\n  CHOOSE_COMPLETE_STATUS,\n  CHANGE_TITLE_INPUT_TEXT,\n  CHANGE_DESCRIPTION_INPUT_TEXT,\n  GET_DEADLINE_DATE,\n  RESET_FORM,\n  CHANGE_SUBTASK_INPUT_TEXT,\n  SET_SUBTASK_COMPLETE_STATUS,\n  CHANGE_SUBTASK_LIST,\n  CHANGE_SELECTED_SUBTASK_TEXT,\n  CHANGE_SELECTED_SUBTASK_COMPLETE_STATUS,\n  SET_TAG,\n  // ChangeTodoInfo Types\n  GET_TODO_INFO,\n  SHOW_TODO_INFO,\n  SET_COMPLETE_STATUS_FOR_SELECTED_TODO,\n  CHANGE_TITLE_FOR_SELECTED_TODO,\n  CHANGE_DEADLINE_FOR_SELECTED_TODO,\n  CHANGE_DESCRIPTION_FOR_SELECTED_TODO,\n  CHANGE_TODO_INFO,\n  CHANGE_TODO_SUBTASK_LIST,\n  CHANGE_TODO_SUBTASK_INPUT_TEXT,\n  SET_TODO_SUBTASK_COMPLETE_STATUS,\n  CHANGE_TODO_TAG,\n  RESET_EDITING_SELECTED_TODO_FORM,\n} from './types';\n\nexport const initialState = {\n  // TodoList State\n  todoList: [],\n  // AddTodoForm State\n  visibleNewTaskForm: false,\n  completeStatus: false,\n  titleInputText: '',\n  descriptionInputText: '',\n  deadlineDate: todaysDate,\n  warnings: {\n    titleWarning: false,\n    tagFieldWarning: false,\n    subtasksWarning: false,\n    deadlineWarning: false,\n  },\n  subtasks: {\n    subtaskList: [{\n      id: 1,\n      title: '',\n      complete: false,\n    }],\n    subtaskInputText: '',\n    subtaskCompleteStatus: false,\n    selectedSubtaskText: '',\n  },\n  tag: '',\n  // ChangeTodoInfo State\n  todoInfo: {\n    id: 0,\n    title: '',\n    description: '',\n    deadline: todaysDate,\n    subtaskList: [{\n      id: 1,\n      title: '',\n      complete: false,\n    }],\n    subtaskText: '',\n    completed: false,\n    subtaskInputText: '',\n    subtaskCompleteStatus: false,\n    selectedSubtaskText: '',\n    selectedSubtaskCompleteStatus: false,\n    todoTag: '',\n  },\n  visibilityTodoInfo: false,\n};\n\nexport const todoReducer = (state = initialState, action) => {\n  const { todoInfo, subtasks, warnings } = state;\n\n  switch (action.type) {\n    // General Cases\n    case TODOS_FILL:\n      return {\n        ...state,\n        todoList: action.payload,\n      };\n\n    case SET_INITIAL_STATE:\n      return initialState;\n\n    case SET_TITLE_WARNING:\n      return {\n        ...state,\n        warnings: {\n          ...warnings,\n          titleWarning: action.payload,\n        },\n      };\n\n    case SET_TAG_FIELD_WARNING:\n      return {\n        ...state,\n        warnings: {\n          ...warnings,\n          tagFieldWarning: action.payload,\n        },\n      };\n\n    case SET_SUBTASKS_WARNING:\n      return {\n        ...state,\n        warnings: {\n          ...warnings,\n          subtasksWarning: action.payload,\n        },\n      };\n\n    case SET_DEADLINE_WARNING:\n      return {\n        ...state,\n        warnings: {\n          ...warnings,\n          deadlineWarning: action.payload,\n        },\n      };\n\n    case RESET_FORM:\n      return {\n        ...initialState,\n        todoList: state.todoList,\n        visibleNewTaskForm: true,\n      };\n    // AddTodoForm Cases\n    case SHOW_NEW_TASK_FORM:\n      return {\n        ...state,\n        visibleNewTaskForm: action.payload,\n      };\n\n    case CHOOSE_COMPLETE_STATUS:\n      return {\n        ...state,\n        completeStatus: action.payload,\n      };\n\n    case CHANGE_TITLE_INPUT_TEXT:\n      return {\n        ...state,\n        titleInputText: action.payload,\n      };\n\n    case CHANGE_DESCRIPTION_INPUT_TEXT:\n      return {\n        ...state,\n        descriptionInputText: action.payload,\n      };\n\n    case GET_DEADLINE_DATE:\n      return {\n        ...state,\n        deadlineDate: action.payload,\n      };\n\n    case CHANGE_SUBTASK_INPUT_TEXT:\n      return {\n        ...state,\n        subtasks: {\n          ...subtasks,\n          subtaskInputText: action.payload,\n        },\n      };\n\n    case SET_SUBTASK_COMPLETE_STATUS:\n      return {\n        ...state,\n        subtasks: {\n          ...subtasks,\n          subtaskCompleteStatus: action.payload,\n        },\n      };\n\n    case CHANGE_SELECTED_SUBTASK_TEXT:\n      return {\n        ...state,\n        subtasks: {\n          ...subtasks,\n          selectedSubtaskText: action.payload,\n        },\n      };\n\n    case CHANGE_SELECTED_SUBTASK_COMPLETE_STATUS:\n      return {\n        ...state,\n        subtasks: {\n          ...subtasks,\n          selectedSubtaskCompleteStatus: action.payload,\n        },\n      };\n\n    case CHANGE_SUBTASK_LIST:\n      return {\n        ...state,\n        subtasks: {\n          ...subtasks,\n          subtaskList: action.payload,\n        },\n      };\n\n    case CHANGE_TODO_INFO:\n      return {\n        ...state,\n        todoList: action.payload,\n      };\n\n    case SET_TAG:\n      return {\n        ...state,\n        tag: action.payload,\n      };\n\n    // ChangeTodoInfo Cases\n    case GET_TODO_INFO:\n      return {\n        ...state,\n        todoInfo: action.payload,\n      };\n\n    case SHOW_TODO_INFO:\n      return {\n        ...state,\n        visibilityTodoInfo: action.payload,\n      };\n\n    case SET_COMPLETE_STATUS_FOR_SELECTED_TODO:\n      return {\n        ...state,\n        todoInfo: {\n          ...todoInfo,\n          completed: action.payload,\n        },\n      };\n\n    case CHANGE_TITLE_FOR_SELECTED_TODO:\n      return {\n        ...state,\n        todoInfo: {\n          ...todoInfo,\n          title: action.payload,\n        },\n      };\n\n    case CHANGE_DEADLINE_FOR_SELECTED_TODO:\n      return {\n        ...state,\n        todoInfo: {\n          ...todoInfo,\n          deadline: action.payload,\n        },\n      };\n\n    case CHANGE_DESCRIPTION_FOR_SELECTED_TODO:\n      return {\n        ...state,\n        todoInfo: {\n          ...todoInfo,\n          description: action.payload,\n        },\n      };\n\n    case CHANGE_TODO_SUBTASK_LIST:\n      return {\n        ...state,\n        todoInfo: {\n          ...todoInfo,\n          subtaskList: action.payload,\n        },\n      };\n\n    case CHANGE_TODO_SUBTASK_INPUT_TEXT:\n      return {\n        ...state,\n        todoInfo: {\n          ...todoInfo,\n          subtaskInputText: action.payload,\n        },\n      };\n\n    case SET_TODO_SUBTASK_COMPLETE_STATUS:\n      return {\n        ...state,\n        todoInfo: {\n          ...todoInfo,\n          subtaskCompleteStatus: action.payload,\n        },\n      };\n\n    case CHANGE_TODO_TAG:\n      return {\n        ...state,\n        todoInfo: {\n          ...todoInfo,\n          todoTag: action.payload,\n        },\n      };\n\n    case RESET_EDITING_SELECTED_TODO_FORM:\n      return {\n        ...initialState,\n        visibilityTodoInfo: true,\n        todoList: state.todoList,\n        todoInfo: {\n          ...initialState.todoInfo,\n          deadline: todaysDate,\n        },\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport { todoReducer as todo } from '../bus/todos/reducer';\n\nexport const rootReducer = combineReducers({\n  todo,\n});\n","import { compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nexport const logger = createLogger({\n  duration: true,\n  collapsed: true,\n  colors: {\n    title: action => (action.error ? 'firebrick' : 'deepskyblue'),\n    prevState: () => '#1C5FAF',\n    action: () => '#149945',\n    nextState: () => '#A47104',\n    error: () => '#FF0005',\n  },\n});\n\nconst developmentEnvironment = process.env.NODE_ENV === 'development';\n\nconst devtools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n\nconst composeEnhancers = developmentEnvironment\n  && devtools\n  ? devtools\n  : compose;\n\nconst middleware = [thunk];\n\nif (developmentEnvironment) {\n  middleware.push(logger);\n}\n\nexport { composeEnhancers, middleware };\n","// Core\nimport { createStore, applyMiddleware } from 'redux';\n\n// Tools\nimport { rootReducer } from './rootReducer';\nimport { composeEnhancers, middleware } from './middleware';\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middleware)),\n);\n","import {\n  // General Types\n  TODOS_FILL,\n  SET_INITIAL_STATE,\n  SET_TITLE_WARNING,\n  SET_TAG_FIELD_WARNING,\n  SET_SUBTASKS_WARNING,\n  SET_DEADLINE_WARNING,\n  // AddTodoForm Types\n  SHOW_NEW_TASK_FORM,\n  CHOOSE_COMPLETE_STATUS,\n  CHANGE_TITLE_INPUT_TEXT,\n  CHANGE_DESCRIPTION_INPUT_TEXT,\n  GET_DEADLINE_DATE,\n  RESET_FORM,\n  SET_SUBTASK_COMPLETE_STATUS,\n  CHANGE_SUBTASK_INPUT_TEXT,\n  CHANGE_SELECTED_SUBTASK_TEXT,\n  CHANGE_SUBTASK_LIST,\n  CHANGE_SELECTED_SUBTASK_COMPLETE_STATUS,\n  SET_TAG,\n  // ChangeTodoInfo Types\n  GET_TODO_INFO,\n  SHOW_TODO_INFO,\n  SET_COMPLETE_STATUS_FOR_SELECTED_TODO,\n  CHANGE_TITLE_FOR_SELECTED_TODO,\n  CHANGE_DEADLINE_FOR_SELECTED_TODO,\n  CHANGE_DESCRIPTION_FOR_SELECTED_TODO,\n  CHANGE_TODO_INFO,\n  CHANGE_TODO_SUBTASK_LIST,\n  CHANGE_TODO_SUBTASK_INPUT_TEXT,\n  SET_TODO_SUBTASK_COMPLETE_STATUS,\n  CHANGE_TODO_TAG,\n  RESET_EDITING_SELECTED_TODO_FORM,\n} from './types';\n\nexport const todoActions = Object.freeze({\n  // General Actions\n  todosFillAction: payload => ({\n    type: TODOS_FILL,\n    payload,\n  }),\n\n  setInitialStateAction: payload => ({\n    type: SET_INITIAL_STATE,\n    payload,\n  }),\n\n  setTitleWarningAction: payload => ({\n    type: SET_TITLE_WARNING,\n    payload,\n  }),\n\n  setTagFieldwarningAction: payload => ({\n    type: SET_TAG_FIELD_WARNING,\n    payload,\n  }),\n\n  setSaubtasksWarningAction: payload => ({\n    type: SET_SUBTASKS_WARNING,\n    payload,\n  }),\n\n  setDeadlineWarningAction: payload => ({\n    type: SET_DEADLINE_WARNING,\n    payload,\n  }),\n\n  // AddTodoForm Actions\n  setVisibleNewTaskFormAction: payload => ({\n    type: SHOW_NEW_TASK_FORM,\n    payload,\n  }),\n\n  setCompleteStatusAction: payload => ({\n    type: CHOOSE_COMPLETE_STATUS,\n    payload,\n  }),\n\n  changeTitleInputTextAction: payload => ({\n    type: CHANGE_TITLE_INPUT_TEXT,\n    payload,\n  }),\n\n  changeDescriptionInputTextAction: payload => ({\n    type: CHANGE_DESCRIPTION_INPUT_TEXT,\n    payload,\n  }),\n\n  getDeadlineDateAction: payload => ({\n    type: GET_DEADLINE_DATE,\n    payload,\n  }),\n\n  changeSubtaskInputTextAction: payload => ({\n    type: CHANGE_SUBTASK_INPUT_TEXT,\n    payload,\n  }),\n\n  setSubtaskCompleteStatusAction: payload => ({\n    type: SET_SUBTASK_COMPLETE_STATUS,\n    payload,\n  }),\n\n  changeSelectedSubtaskTextAction: payload => ({\n    type: CHANGE_SELECTED_SUBTASK_TEXT,\n    payload,\n  }),\n\n  changeSelectedSubtaskCompleteStatus: payload => ({\n    type: CHANGE_SELECTED_SUBTASK_COMPLETE_STATUS,\n    payload,\n  }),\n\n  changeSubtaskListAction: payload => ({\n    type: CHANGE_SUBTASK_LIST,\n    payload,\n  }),\n\n  setTagAction: payload => ({\n    type: SET_TAG,\n    payload,\n  }),\n\n  resetFormAction: payload => ({\n    type: RESET_FORM,\n    payload,\n  }),\n\n  // ChangeTodoInfo Actions\n\n  getTodoInfoAction: payload => ({\n    type: GET_TODO_INFO,\n    payload,\n  }),\n\n  changeVisibilityTodoInfoAction: payload => ({\n    type: SHOW_TODO_INFO,\n    payload,\n  }),\n\n  changeCompleteStatusForSelectedTodoAction: payload => ({\n    type: SET_COMPLETE_STATUS_FOR_SELECTED_TODO,\n    payload,\n  }),\n\n  changeTitleForSelectedTodoAction: payload => ({\n    type: CHANGE_TITLE_FOR_SELECTED_TODO,\n    payload,\n  }),\n\n  changeDeadlineForSelectedTodo: payload => ({\n    type: CHANGE_DEADLINE_FOR_SELECTED_TODO,\n    payload,\n  }),\n\n  changeDescriptionForSelectedTodo: payload => ({\n    type: CHANGE_DESCRIPTION_FOR_SELECTED_TODO,\n    payload,\n  }),\n\n  changeTodoInfo: payload => ({\n    type: CHANGE_TODO_INFO,\n    payload,\n  }),\n\n  changeTodoSubtaskInputTextAction: payload => ({\n    type: CHANGE_TODO_SUBTASK_INPUT_TEXT,\n    payload,\n  }),\n\n  setTodoSubtaskCompleteStatusAction: payload => ({\n    type: SET_TODO_SUBTASK_COMPLETE_STATUS,\n    payload,\n  }),\n\n  changeTodoSubtaskListAction: payload => ({\n    type: CHANGE_TODO_SUBTASK_LIST,\n    payload,\n  }),\n\n  changeTodoTagAction: payload => ({\n    type: CHANGE_TODO_TAG,\n    payload,\n  }),\n\n  resetEditingSelectedTodoFormAction: payload => ({\n    type: RESET_EDITING_SELECTED_TODO_FORM,\n    payload,\n  }),\n});\n","// Core\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Actions\nimport { todoActions } from './actions';\nimport { initialState } from './reducer';\n\n// types & reducers\nexport * from './types';\nexport * from './reducer';\n\nexport const useTodos = () => {\n  const dispatch = useDispatch();\n\n  const {\n    visibleNewTaskForm,\n    todoList,\n    completeStatus,\n    titleInputText,\n    descriptionInputText,\n    deadlineDate,\n    warnings,\n    subtasks,\n    todoInfo,\n    visibilityTodoInfo,\n    tag,\n  } = useSelector(state => state.todo);\n\n  const {\n    subtaskList,\n    subtaskInputText,\n    subtaskCompleteStatus,\n  } = subtasks;\n\n  // General\n  const closeForms = () => {\n    dispatch(todoActions.resetFormAction());\n    dispatch(todoActions.setVisibleNewTaskFormAction(false));\n  };\n\n  const createTodo = () => ({\n    id: todoList.length + 1,\n    title: titleInputText,\n    description: descriptionInputText,\n    deadline: deadlineDate,\n    completed: completeStatus,\n    subtaskList,\n    todoTag: tag,\n  });\n\n  const addTodo = async(newTodo) => {\n    const newTodoList = await [...todoList, newTodo];\n\n    dispatch(todoActions.todosFillAction(newTodoList));\n  };\n\n  const setExternalCompleteStatus = (id) => {\n    const newTodoList = todoList.map(todo => ((todo.id === id)\n      ? {\n        ...todo,\n        completed: !todo.completed,\n      }\n      : todo\n    ));\n\n    dispatch(todoActions.todosFillAction(newTodoList));\n  };\n\n  const changeTitleErrorStatus = (value) => {\n    dispatch(todoActions.setTitleWarningAction(value));\n  };\n\n  const newSubtask = () => ({\n    id: subtaskList.length + 1,\n    title: subtaskInputText,\n    complete: subtaskCompleteStatus,\n  });\n\n  const changeTagErrorStatus = (value) => {\n    dispatch(todoActions.setTagFieldwarningAction(value));\n  };\n\n  const resetWarningErrors = () => {\n    dispatch(todoActions.setTitleWarningAction(false));\n    dispatch(todoActions.setTagFieldwarningAction(false));\n    dispatch(todoActions.setSaubtasksWarningAction(false));\n  };\n\n  // AddTodoForm\n  const setVisibleNewTaskForm = (event) => {\n    event.stopPropagation();\n\n    if (!visibleNewTaskForm) {\n      resetWarningErrors();\n    }\n\n    dispatch(todoActions.setVisibleNewTaskFormAction(true));\n    dispatch(todoActions.changeVisibilityTodoInfoAction(false));\n  };\n\n  const setCompleteStatus = () => {\n    dispatch(todoActions.setCompleteStatusAction(!completeStatus));\n  };\n\n  const changeTitleInputText = (event) => {\n    const { value } = event.target;\n\n    dispatch(todoActions.changeTitleInputTextAction(value));\n\n    if (value.length >= 3) {\n      changeTitleErrorStatus(false);\n    }\n  };\n\n  const changeDeadlineDate = (event) => {\n    const { value } = event.target;\n\n    dispatch(todoActions.getDeadlineDateAction(value));\n  };\n\n  const changeDescriptionInputText = (event) => {\n    const { value } = event.target;\n\n    dispatch(todoActions.changeDescriptionInputTextAction(value));\n  };\n\n  const changeSelectedSubtaskText = (event, id) => {\n    const { value } = event.target;\n    const selectedSubtask = subtaskList.find(subtask => subtask.id === id);\n\n    let newSubtaskList = [];\n\n    newSubtaskList = subtaskList\n      .map(subtask => ((selectedSubtask.id === subtask.id)\n        ? {\n          ...subtask,\n          title: value,\n        } : { ...subtask }));\n\n    if (subtaskList.length === 1) {\n      changeSubtaskList([...initialState.subtasks.subtaskList]);\n    }\n\n    if (!value.length && subtaskList.length > 1) {\n      newSubtaskList = subtaskList.filter(subtask => subtask.id !== id);\n    }\n\n    changeSubtaskList(newSubtaskList);\n  };\n\n  const changeSelectedSubstaskCompleteStatus = (id) => {\n    const selectedSubtask = subtaskList.find(subtask => subtask.id === id);\n\n    const newSubtaskList = subtaskList\n      .map(subtask => ((selectedSubtask.id === subtask.id)\n        ? {\n          ...subtask,\n          complete: !subtask.complete,\n        } : { ...subtask }));\n\n    changeSubtaskList(newSubtaskList);\n  };\n\n  const addSubtask = () => {\n    const newSubtaskList = [...subtaskList, newSubtask()];\n\n    changeSubtaskList(newSubtaskList);\n    dispatch(todoActions.changeSubtaskInputTextAction(''));\n    dispatch(todoActions\n      .setSubtaskCompleteStatusAction(false));\n  };\n\n  const setTag = (_tag) => {\n    dispatch(todoActions.setTagAction(_tag));\n\n    if (_tag.length) {\n      changeTagErrorStatus(false);\n    }\n  };\n\n  const addTododFormSubmit = (event) => {\n    event.preventDefault();\n\n    if (event.keyCode === 'Enter') {\n      event.preventDefault();\n    }\n\n    if (titleInputText.length < 3) {\n      dispatch(todoActions.setTitleWarningAction(true));\n    }\n\n    if (subtaskList.length < 2) {\n      dispatch(todoActions.setSaubtasksWarningAction(true));\n    }\n\n    if (!tag) {\n      dispatch(todoActions.setTagFieldwarningAction(true));\n    }\n\n    if (titleInputText.length >= 3\n      && tag\n      && subtaskList.length > 1\n    ) {\n      addTodo(createTodo());\n      dispatch(todoActions.setInitialStateAction());\n      dispatch(todoActions.setVisibleNewTaskFormAction(false));\n    }\n  };\n\n  const resetFormFields = () => {\n    dispatch(todoActions.resetFormAction());\n  };\n\n  // ChangeTodoInfo\n  const showTodoInfo = async(event, id) => {\n    event.stopPropagation();\n\n    if (!visibilityTodoInfo) {\n      resetWarningErrors();\n    }\n\n    const selectedTodoInfo = todoList.find(todo => todo.id === id);\n\n    dispatch(todoActions.setVisibleNewTaskFormAction(false));\n    dispatch(todoActions.getTodoInfoAction(selectedTodoInfo));\n    dispatch(todoActions.changeVisibilityTodoInfoAction(true));\n  };\n\n  const deleteTodo = () => {\n    const newTodoList = todoList.filter(todo => todo.id !== todoInfo.id);\n\n    dispatch(todoActions.todosFillAction(newTodoList));\n    dispatch(todoActions.changeVisibilityTodoInfoAction(false));\n\n    if (!(newTodoList.length)) {\n      dispatch(todoActions.setInitialStateAction());\n    }\n  };\n\n  const changeSelectedTodoInfo = async(event) => {\n    event.preventDefault();\n\n    const { title, todoTag } = todoInfo;\n\n    if (event.keyCode === 'Enter') {\n      event.preventDefault();\n    }\n\n    const newTodoList = await todoList.map(todo => ((todo.id === todoInfo.id)\n      ? {\n        id: todoInfo.id,\n        title: todoInfo.title,\n        description: todoInfo.description,\n        deadline: todoInfo.deadline,\n        completed: todoInfo.completed,\n        subtaskList: todoInfo.subtaskList,\n        todoTag: todoInfo.todoTag,\n      }\n      : todo\n    ));\n\n    if (title.length < 3) {\n      dispatch(todoActions.setTitleWarningAction(true));\n    }\n\n    if (todoInfo.subtaskList.length < 2) {\n      dispatch(todoActions.setSaubtasksWarningAction(true));\n    }\n\n    if (!todoTag) {\n      dispatch(todoActions.setTagFieldwarningAction(true));\n    }\n\n    if (title.length >= 3\n      && todoTag\n      && todoInfo.subtaskList.length > 1\n    ) {\n      dispatch(todoActions.todosFillAction([...newTodoList]));\n      dispatch(todoActions.changeVisibilityTodoInfoAction(false));\n    }\n  };\n\n  const changeSubtaskInputText = (event) => {\n    const { value } = event.target;\n\n    dispatch(todoActions.changeSubtaskInputTextAction(value));\n  };\n\n  const setSubtaskCopmpleteStatus = () => {\n    dispatch(todoActions\n      .setSubtaskCompleteStatusAction(!subtaskCompleteStatus));\n  };\n\n  const changeSubtaskList = (newSubtaskList) => {\n    dispatch(todoActions.changeSubtaskListAction(newSubtaskList));\n\n    if (subtaskList.length > 1) {\n      dispatch(todoActions.setSaubtasksWarningAction(false));\n    }\n  };\n\n  const setSelectedTodoCompleteStatus = () => {\n    const { completed } = todoInfo;\n\n    // eslint-disable-next-line no-console\n    console.log(todoList);\n\n    dispatch(todoActions.changeCompleteStatusForSelectedTodoAction(!completed));\n  };\n\n  const changeTitleForSelectedTodo = (event) => {\n    const { value } = event.target;\n\n    dispatch(todoActions.changeTitleForSelectedTodoAction(value));\n\n    if (value.length > 2) {\n      dispatch(todoActions.setTitleWarningAction(false));\n    }\n  };\n\n  const changeDeadlineDateForSelectedTodo = (event) => {\n    const { value } = event.target;\n\n    dispatch(todoActions.changeDeadlineForSelectedTodo(value));\n  };\n\n  const changeDescriptionForSelectedTodo = (event) => {\n    const { value } = event.target;\n\n    dispatch(todoActions.changeDescriptionForSelectedTodo(value));\n  };\n\n  const changeTodoSubtaskList = (newSubtaskList) => {\n    dispatch(todoActions.changeTodoSubtaskListAction(newSubtaskList));\n\n    if (todoInfo.subtaskList.length > 1) {\n      dispatch(todoActions.setSaubtasksWarningAction(false));\n    }\n  };\n\n  const changeTodoSelectedSubtaskText = (event, id) => {\n    const { value } = event.target;\n    const selectedSubtask = todoInfo.subtaskList\n      .find(subtask => subtask.id === id);\n\n    let newSubtaskList = [];\n\n    newSubtaskList = todoInfo.subtaskList\n      .map(subtask => ((selectedSubtask.id === subtask.id)\n        ? {\n          ...subtask,\n          title: value,\n        } : { ...subtask }));\n\n    if (todoInfo.subtaskList.length === 1) {\n      changeTodoSubtaskList([...initialState.subtasks.subtaskList]);\n    }\n\n    if (!value.length && todoInfo.subtaskList.length > 1) {\n      newSubtaskList = todoInfo.subtaskList\n        .filter(subtask => subtask.id !== id);\n    }\n\n    changeTodoSubtaskList(newSubtaskList);\n  };\n\n  const changeTodoSelectedSubstaskCompleteStatus = (id) => {\n    const selectedSubtask = todoInfo.subtaskList\n      .find(subtask => subtask.id === id);\n\n    const newSubtaskList = todoInfo.subtaskList\n      .map(subtask => ((selectedSubtask.id === subtask.id)\n        ? {\n          ...subtask,\n          complete: !subtask.complete,\n        } : subtask\n      ));\n\n    changeTodoSubtaskList(newSubtaskList);\n  };\n\n  const newTodoSubtask = () => ({\n    id: todoInfo.subtaskList.length + 1,\n    title: subtaskInputText,\n    complete: subtaskCompleteStatus,\n  });\n\n  const addTodoSubtask = async() => {\n    const newSubtaskList = await [...todoInfo.subtaskList, newTodoSubtask()];\n\n    changeTodoSubtaskList(newSubtaskList);\n    dispatch(todoActions.changeTodoSubtaskInputTextAction(''));\n    dispatch(todoActions\n      .setTodoSubtaskCompleteStatusAction(false));\n  };\n\n  const changeTodoTag = (modifiedTag) => {\n    dispatch(todoActions.changeTodoTagAction(modifiedTag));\n  };\n\n  const resetTodoFormFields = () => {\n    dispatch(todoActions.resetEditingSelectedTodoFormAction());\n  };\n\n  return {\n    visibleNewTaskForm,\n    todoList,\n    titleInputText,\n    descriptionInputText,\n    deadlineDate,\n    completeStatus,\n    warnings,\n    subtasks,\n    todoInfo,\n    visibilityTodoInfo,\n    tag,\n    closeForms,\n    addTododFormSubmit,\n    deleteTodo,\n    setExternalCompleteStatus,\n    setCompleteStatus,\n    changeTitleInputText,\n    changeDescriptionInputText,\n    changeDeadlineDate,\n    resetFormFields,\n    changeSubtaskInputText,\n    setSubtaskCopmpleteStatus,\n    addSubtask,\n    changeSelectedSubtaskText,\n    changeSelectedSubstaskCompleteStatus,\n    setTag,\n    setVisibleNewTaskForm,\n    showTodoInfo,\n    setSelectedTodoCompleteStatus,\n    changeTitleForSelectedTodo,\n    changeDeadlineDateForSelectedTodo,\n    changeDescriptionForSelectedTodo,\n    changeSelectedTodoInfo,\n    changeTodoSelectedSubtaskText,\n    changeTodoSelectedSubstaskCompleteStatus,\n    changeTodoTag,\n    addTodoSubtask,\n    resetTodoFormFields,\n  };\n};\n","// Core\nimport React from 'react';\n\n// Tools\nimport { useTodos } from '../../../../bus/todos/index';\n\n// Styles\nimport './NewTaskButton.scss';\n\nexport const NewTaskButton = () => {\n  const { setVisibleNewTaskForm } = useTodos();\n\n  return (\n    <button\n      type=\"button\"\n      className=\"app__new-task-btn new-task-btn\"\n      onClick={setVisibleNewTaskForm}\n    >\n      +\n    </button>\n  );\n};\n","// Core\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\n// Tools\nimport { useTodos } from '../../../../bus/todos/index';\n\n// Styles\nimport './Todo.scss';\n\nconst moment = require('moment');\n\nexport const Todo = ({\n  id,\n  title,\n  deadline,\n  completed,\n  todoTag,\n}, index) => {\n  const { showTodoInfo, setExternalCompleteStatus } = useTodos();\n\n  const transformedDate = moment(deadline).format('DD MMM YYYY');\n\n  const tagClasses = classNames('todo__tag', {\n    'todo__tag sketch-button': todoTag === 'Sketch',\n    'todo__tag spotify-button': todoTag === 'Spotify',\n    'todo__tag dribble-button': todoTag === 'Dribble',\n    'todo__tag behance-button': todoTag === 'Behance',\n    'todo__tag ux-button': todoTag === 'UX',\n  });\n\n  return (\n    <li\n      className=\"todo-list__todo todo\"\n      onClick={event => showTodoInfo(event, id)}\n      role=\"presentation\"\n    >\n      <div className=\"todo__todo-information\">\n        <div className=\"todo__status-title-block\">\n          <div className=\"todo__todo-status-block\">\n            <label\n              htmlFor={`${index}`}\n              className=\"todo_todo-label\"\n            >\n              <input\n                type=\"checkbox\"\n                className=\"todo__complete-checkbox\"\n                id={`${index}`}\n                checked={completed}\n                onChange={() => setExternalCompleteStatus(id)}\n                onClick={event => event.stopPropagation()}\n              />\n            </label>\n          </div>\n          <div className=\"todo__todo-tittle-block\">\n            <h3 className=\"todo__todo-title\">{title}</h3>\n          </div>\n        </div>\n\n        <div className=\"todo__date-tag-block\">\n          <span\n            className=\"todo__todo-deadline-date todo-deadline-date\"\n          >\n            {transformedDate}\n          </span>\n          <div className={tagClasses}>\n            {todoTag}\n          </div>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nTodo.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  todoTag: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  deadline: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const TodoShape = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  deadline: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n};\n","// Core\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\n// Components\nimport { TodoShape } from '../../../shapes/TodoShape';\nimport { Todo } from '../Todo';\nimport { useTodos } from '../../../../bus/todos';\n\n// Styles\nimport './TodoList.scss';\n\nexport const TodoList = ({ todoList }) => {\n  const {\n    visibilityTodoInfo,\n    visibleNewTaskForm,\n  } = useTodos();\n\n  const todoListClasses = classNames('todo-body__todo-list todo-list', {\n    'todo-body__todo-list long-todo-list': !visibilityTodoInfo\n      || !visibleNewTaskForm,\n  });\n\n  return (\n    <ul className={todoListClasses}>\n      {\n        todoList.map((todo, index) => (\n          <Todo\n            key={todo.id}\n            {...todo}\n            index={index}\n          />\n        ))\n      }\n    </ul>\n  );\n};\n\nTodoList.propTypes = {\n  todoList: PropTypes.arrayOf(PropTypes.shape(TodoShape)).isRequired,\n};\n","// Core\nimport React from 'react';\n\n// Tools\nimport { useTodos } from '../../../../../bus/todos/index';\n\n// Styles\nimport './TitleInput.scss';\n\nexport const TitleInput = () => {\n  const {\n    titleInputText,\n    changeTitleInputText,\n    warnings,\n  } = useTodos();\n\n  return (\n    <div className=\"add-todo-form__title\">\n      <input\n        type=\"text\"\n        id=\"title-input\"\n        value={titleInputText}\n        className=\"add-todo-form__input title-input\"\n        onChange={changeTitleInputText}\n        placeholder=\"New task\"\n      />\n\n      {warnings.titleWarning && (\n        <span className=\"add-todo-form__warning-error\">\n          Task title is too short\n        </span>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { useTodos } from '../../../../../bus/todos/index';\n\nimport './DescriptionInput.scss';\n\nexport const DescriptionInput = () => {\n  const {\n    descriptionInputText,\n    changeDescriptionInputText,\n  } = useTodos();\n\n  return (\n    <div className=\"add-todo-form__description\">\n      <label\n        htmlFor=\"form-description\"\n        className=\"add-todo-form__label\"\n      >\n        Description\n      </label>\n      <input\n        id=\"form-description\"\n        type=\"text\"\n        value={descriptionInputText}\n        className=\"add-todo-form__input\"\n        onChange={changeDescriptionInputText}\n        placeholder=\"Describe your event\"\n      />\n    </div>\n  );\n};\n","// Core\nimport React from 'react';\n\n// Tools\nimport { useTodos } from '../../../../../bus/todos/index';\nimport { todaysDate } from '../../../../../helpers';\n\n// Styles\nimport './DeadlineInput.scss';\n\nconst moment = require('moment');\n\nexport const DeadlineInput = () => {\n  const {\n    deadlineDate,\n    changeDeadlineDate,\n  } = useTodos();\n\n  const formattedDate = moment(deadlineDate).format('DD MMM YYYY');\n\n  return (\n    <div className=\"add-todo-form__deadline deadline\">\n      <label\n        htmlFor=\"form-calendar\"\n        className=\"add-todo-form__label\"\n      >\n        <span className=\"deadline__title\">Due to</span>\n\n        <span className=\"deadline__text\">\n          {formattedDate}\n        </span>\n\n        <input\n          type=\"date\"\n          id=\"form-calendar\"\n          name=\"calendar\"\n          value={deadlineDate}\n          min={todaysDate}\n          className=\"add-todo-form__deadline-input deadline-input\"\n          onChange={changeDeadlineDate}\n        />\n      </label>\n\n      {deadlineDate === '' && (\n        <span className=\"add-todo-form__warning-error warning-error\">\n          Deadline is required\n        </span>\n      )}\n    </div>\n  );\n};\n","// Core\nimport React from 'react';\nimport classNames from 'classnames';\n\n// Tools\nimport { useTodos } from '../../../../../bus/todos/index';\n\n// Styles\nimport './CompleteInput.scss';\n\nexport const CompleteInput = () => {\n  const {\n    completeStatus,\n    setCompleteStatus,\n  } = useTodos();\n\n  const checkboxStyle = classNames('add-todo-form__complete-checkbox-text', {\n    'add-todo-form__complete-checkbox-text-selected': completeStatus,\n  });\n\n  return (\n    <label\n      className=\"add-todo-form__checkbox-block\"\n      htmlFor=\"complete-checkbox\"\n    >\n      <input\n        type=\"checkbox\"\n        id=\"complete-checkbox\"\n        name=\"complete-status\"\n        className=\"add-todo-form__complete-checkbox\"\n        onChange={setCompleteStatus}\n        checked={completeStatus}\n      />\n      <span\n        className={checkboxStyle}\n      >\n        Mark as complete\n      </span>\n    </label>\n  );\n};\n","// Core\nimport React from 'react';\n\n// Tools\nimport { useTodos } from '../../../../../bus/todos/index';\n\n// Styles\nimport './Checklist.scss';\n\nexport const Checklist = () => {\n  const {\n    subtasks,\n    warnings,\n    changeSelectedSubtaskText,\n    changeSelectedSubstaskCompleteStatus,\n    addSubtask,\n  } = useTodos();\n\n  const {\n    subtaskList,\n  } = subtasks;\n\n  const newSubtaskKeyDown = (event, index) => {\n    const { keyCode } = event;\n\n    if (((keyCode >= 48 && keyCode <= 57)\n      || (keyCode >= 65 && keyCode <= 90)\n      || (keyCode >= 186 && keyCode <= 192)\n      || (keyCode >= 219 && keyCode <= 222))\n      && (index + 1) === subtaskList.length) {\n      addSubtask();\n    }\n  };\n\n  return (\n    <div className=\"add-todo-form__subtasks\">\n      <span className=\"add-todo-form__subtasks-block-title\">\n        Checklist\n      </span>\n      {subtaskList.map((subtask, index) => (\n        <div\n          className=\"add-todo-form__subtasks-block\"\n          key={subtask.id}\n        >\n          <div className=\"add-todo-form__checkboxes-block\">\n            <input\n              type=\"checkbox\"\n              name=\"subtask-checkbox\"\n              className=\"add-todo-form__complete-checkbox\"\n              checked={subtask.complete}\n              onChange={() => changeSelectedSubstaskCompleteStatus(subtask.id)}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Add more\"\n              name=\"subtask-value\"\n              className=\"add-todo-form__subtask-input\"\n              value={subtask.title}\n              onChange={event => changeSelectedSubtaskText(event, subtask.id)}\n              onKeyDown={event => newSubtaskKeyDown(event, index)}\n            />\n          </div>\n        </div>\n      ))}\n\n      {warnings.subtasksWarning && (\n        <span\n          className=\"add-todo-form__subtasks-error subtasks-error\"\n        >\n          Task doesn&apos;t contain any sub-tasks\n        </span>\n      )}\n    </div>\n  );\n};\n","// Core\nimport React from 'react';\n\n// Tools\nimport { useTodos } from '../../../../../bus/todos/index';\n\n// Styles\nimport './TagBlock.scss';\n\nexport const TagBlock = () => {\n  const { warnings, setTag } = useTodos();\n\n  return (\n    <div className=\"add-todo-form__direction-buttons-block\">\n      <div className=\"add-todo-form__direction-buttons\">\n        <button\n          type=\"button\"\n          className=\"add-todo-form__btn sketch-button\"\n          onClick={() => setTag('Sketch')}\n        >\n          Sketch\n        </button>\n        <button\n          type=\"button\"\n          className=\"add-todo-form__btn spotify-button\"\n          onClick={() => setTag('Spotify')}\n        >\n          Spotify\n        </button>\n        <button\n          type=\"button\"\n          className=\"add-todo-form__btn dribble-button\"\n          onClick={() => setTag('Dribble')}\n        >\n          Dribble\n        </button>\n        <button\n          type=\"button\"\n          className=\"add-todo-form__btn behance-button\"\n          onClick={() => setTag('Behance')}\n        >\n          Behance\n        </button>\n        <button\n          type=\"button\"\n          className=\"add-todo-form__btn ux-button\"\n          onClick={() => setTag('UX')}\n        >\n          UX\n        </button>\n      </div>\n      {warnings.tagFieldWarning && (\n        <span\n          className=\"add-todo-form__warning-error warning-error tag-error\"\n        >\n          Task tag field is required\n        </span>\n      )}\n    </div>\n  );\n};\n","// Core\nimport React from 'react';\nimport classNames from 'classnames';\n\n// Tools\nimport { useTodos } from '../../../../../bus/todos/index';\nimport { todaysDate } from '../../../../../helpers';\n\n// Styles\nimport './SubmitButtons.scss';\n\nexport const SubmitButtons = () => {\n  const {\n    titleInputText,\n    descriptionInputText,\n    deadlineDate,\n    tag,\n    subtasks,\n    resetFormFields,\n  } = useTodos();\n\n  const { subtaskList } = subtasks;\n\n  const saveButtonClasses = classNames('add-todo-form__btn save-btn', {\n    disabled: (titleInputText.length > 0 && titleInputText.length < 3)\n      || !titleInputText\n      || !tag\n      || subtaskList.length < 2,\n  });\n\n  const resetButtonClasses = classNames('add-todo-form__btn reset-btn', {\n    disabled: !titleInputText\n      && !descriptionInputText\n      && !tag\n      && deadlineDate === todaysDate\n      && subtaskList.length === 1,\n  });\n\n  return (\n    <div className=\"add-todo-form__submit-buttons\">\n      <button\n        type=\"button\"\n        className={resetButtonClasses}\n        onClick={resetFormFields}\n      >\n        Reset\n      </button>\n\n      <button\n        type=\"submit\"\n        className={saveButtonClasses}\n      >\n        Save\n      </button>\n    </div>\n  );\n};\n","// Core\nimport React from 'react';\n\n// Components\nimport { TitleInput } from './TitleInput';\nimport { DescriptionInput } from './DescriptionInput';\nimport { DeadlineInput } from './DeadlineInput';\nimport { CompleteInput } from './CompleteInput';\nimport { Checklist } from './Checklist';\nimport { TagBlock } from './TagBlock/TagBlock';\nimport { SubmitButtons } from './SubmitButtons/SubmitButtons';\n\n// Tools\nimport { useTodos } from '../../../../bus/todos/index';\nimport { formKeyDown } from '../../../../helpers';\n\n// Styles\nimport './AddTodoForm.scss';\n\nexport const AddTodoForm = () => {\n  const { addTododFormSubmit } = useTodos();\n\n  return (\n    <div className=\"app__add-todo-block add-todo-block\">\n      <form\n        onSubmit={addTododFormSubmit}\n        className=\"add-todo-block__add-todo-form add-todo-form\"\n        onKeyDown={formKeyDown}\n        onClick={event => event.stopPropagation()}\n        role=\"presentation\"\n      >\n        <CompleteInput />\n        <div className=\"add-todo-form__main-menu\">\n          <TitleInput />\n          <DeadlineInput />\n          <DescriptionInput />\n          <Checklist />\n          <TagBlock />\n          <SubmitButtons />\n        </div>\n      </form>\n    </div>\n  );\n};\n","// Core\nimport React from 'react';\n\n// Tools\nimport { useTodos } from '../../../../../bus/todos/index';\n\n// Styles\nimport './TitleInput.scss';\n\nexport const TitleInput = () => {\n  const {\n    todoInfo,\n    warnings,\n    changeTitleForSelectedTodo,\n  } = useTodos();\n\n  const { title } = todoInfo;\n\n  return (\n    <div className=\"add-todo-form__title\">\n      <input\n        type=\"text\"\n        id=\"title-input\"\n        value={title}\n        className=\"add-todo-form__input  title-input\"\n        onChange={changeTitleForSelectedTodo}\n        placeholder=\"Task title\"\n      />\n\n      {warnings.titleWarning && (\n        <span className=\"add-todo-form__warning-error\">\n          Task title is too short\n        </span>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { useTodos } from '../../../../../bus/todos/index';\n\nimport './DescriptionInput.scss';\n\nexport const DescriptionInput = () => {\n  const {\n    todoInfo,\n    changeDescriptionForSelectedTodo,\n  } = useTodos();\n\n  const { description } = todoInfo;\n\n  return (\n    <div className=\"add-todo-form__description\">\n      <label\n        htmlFor=\"form-description\"\n        className=\"add-todo-form__label\"\n      >\n        Description\n      </label>\n      <input\n        id=\"form-description\"\n        type=\"text\"\n        value={description}\n        className=\"add-todo-form__input\"\n        onChange={changeDescriptionForSelectedTodo}\n        placeholder=\"Describe your event\"\n      />\n    </div>\n  );\n};\n","// Core\nimport React from 'react';\n\n// Tools\nimport { useTodos } from '../../../../../bus/todos/index';\n\n// Styles\nimport './DeadlineInput.scss';\n\nconst moment = require('moment');\n\nexport const DeadlineInput = () => {\n  const {\n    todoInfo,\n    changeDeadlineDateForSelectedTodo,\n  } = useTodos();\n\n  const { deadline } = todoInfo;\n\n  const todaysDate = moment().format('YYYY-MM-DD');\n\n  const formattedDate = moment(deadline).format('DD MMM YYYY');\n\n  return (\n    <div className=\"add-todo-form__deadline\">\n      <label\n        htmlFor=\"form-calendar\"\n        className=\"add-todo-form__label\"\n      >\n\n        <span className=\"deadline__title\">Due to</span>\n\n        <span className=\"deadline__text\">\n          {formattedDate}\n        </span>\n\n        <input\n          type=\"date\"\n          id=\"form-calendar\"\n          name=\"calendar\"\n          value={deadline}\n          min={todaysDate}\n          className=\"add-todo-form__deadline-input deadline-input\"\n          onChange={changeDeadlineDateForSelectedTodo}\n        />\n      </label>\n\n      {todoInfo.deadline === '' && (\n        <span className=\"add-todo-form__warning-error warning-error\">\n          Deadline is required\n        </span>\n      )}\n    </div>\n  );\n};\n","// Core\nimport React from 'react';\nimport classNames from 'classnames';\n\n// Tools\nimport { useTodos } from '../../../../../bus/todos/index';\n\n// Styles\nimport './CompleteInput.scss';\n\nexport const CompleteInput = () => {\n  const {\n    todoInfo,\n    setSelectedTodoCompleteStatus,\n  } = useTodos();\n  const { completed } = todoInfo;\n\n  const checkboxStyle = classNames('add-todo-form__complete-checkbox-text', {\n    'add-todo-form__complete-checkbox-text-selected': completed,\n  });\n\n  return (\n    <label\n      className=\"add-todo-form__todo-checkbox-block\"\n      htmlFor=\"complete-checkbox\"\n    >\n      <input\n        type=\"checkbox\"\n        id=\"complete-checkbox\"\n        name=\"complete-status\"\n        className=\"add-todo-form__complete-checkbox\"\n        onChange={setSelectedTodoCompleteStatus}\n        checked={completed}\n      />\n      <span\n        className={checkboxStyle}\n      >\n        Mark as complete\n      </span>\n    </label>\n  );\n};\n","// Core\nimport React from 'react';\n\n// Tools\nimport { useTodos } from '../../../../../bus/todos/index';\n\n// Styles\nimport './Checklist.scss';\n\nexport const Checklist = () => {\n  const {\n    todoInfo,\n    warnings,\n    changeTodoSelectedSubstaskCompleteStatus,\n    changeTodoSelectedSubtaskText,\n    addTodoSubtask,\n  } = useTodos();\n\n  const { subtaskList } = todoInfo;\n\n  const newSubtaskKeyDown = (event, index) => {\n    const { keyCode } = event;\n\n    if (((keyCode >= 48 && keyCode <= 57)\n      || (keyCode >= 65 && keyCode <= 90)\n      || (keyCode >= 186 && keyCode <= 192)\n      || (keyCode >= 219 && keyCode <= 222))\n      && (index + 1) === subtaskList.length) {\n      addTodoSubtask();\n    }\n  };\n\n  return (\n    <div>\n      <span className=\"add-todo-form__subtasks-block-title\">\n        Checklist\n      </span>\n\n      {subtaskList.map((subtask, index) => (\n        <div\n          className=\"add-todo-form__subtasks-block\"\n          key={subtask.id}\n        >\n          <div className=\"add-todo-form__checkboxes-block\">\n            <input\n              type=\"checkbox\"\n              name=\"subtask-checkbox\"\n              className=\"add-todo-form__complete-checkbox\"\n              checked={subtask.complete}\n              onChange={\n                () => changeTodoSelectedSubstaskCompleteStatus(subtask.id)\n              }\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Add more\"\n              name=\"subtask-value\"\n              className=\"add-todo-form__subtask-input\"\n              value={subtask.title}\n              onChange={\n                event => changeTodoSelectedSubtaskText(event, subtask.id)\n              }\n              onKeyDown={event => newSubtaskKeyDown(event, index)}\n            />\n          </div>\n        </div>\n      ))}\n\n      {warnings.subtasksWarning && (\n        <span className=\"add-todo-form__subtasks-error subtasks-error\">\n          Task doesn&apos;t contain any sub-tasks\n        </span>\n      )}\n    </div>\n  );\n};\n","// Core\nimport React from 'react';\n\n// Tools\nimport { useTodos } from '../../../../../bus/todos/index';\n\nexport const Tagblock = () => {\n  const {\n    warnings,\n    changeTodoTag,\n  } = useTodos();\n\n  return (\n    <div className=\"add-todo-form__direction-buttons-block\">\n      <div className=\"add-todo-form__direction-buttons\">\n        <button\n          type=\"button\"\n          className=\"add-todo-form__btn sketch-button\"\n          onClick={() => changeTodoTag('Sketch')}\n        >\n          Sketch\n        </button>\n        <button\n          type=\"button\"\n          className=\"add-todo-form__btn spotify-button\"\n          onClick={() => changeTodoTag('Spotify')}\n        >\n          Spotify\n        </button>\n        <button\n          type=\"button\"\n          className=\"add-todo-form__btn dribble-button\"\n          onClick={() => changeTodoTag('Dribble')}\n        >\n          Dribble\n        </button>\n        <button\n          type=\"button\"\n          className=\"add-todo-form__btn behance-button\"\n          onClick={() => changeTodoTag('Behance')}\n        >\n          Behance\n        </button>\n        <button\n          type=\"button\"\n          className=\"add-todo-form__btn ux-button\"\n          onClick={() => changeTodoTag('UX')}\n        >\n          UX\n        </button>\n      </div>\n\n      {warnings.tagFieldWarning && (\n        <span\n          className=\"add-todo-form__warning-error warning-error tag-error\"\n        >\n          Task tag field is required\n        </span>\n      )}\n    </div>\n  );\n};\n","// Core\nimport React from 'react';\nimport classNames from 'classnames';\n\n// Tools\nimport { useTodos } from '../../../../../bus/todos/index';\nimport { todaysDate } from '../../../../../helpers';\n\nexport const SubmitButtons = () => {\n  const { todoInfo, resetTodoFormFields } = useTodos();\n\n  const saveButtonClasses = classNames('add-todo-form__btn save-btn', {\n    disabled: (todoInfo.title.length > 0 && todoInfo.title.length < 3)\n      || !todoInfo.todoTag\n      || todoInfo.subtaskList.length < 2,\n  });\n\n  const resetButtonClasses = classNames('add-todo-form__btn reset-btn', {\n    disabled: !todoInfo.title\n      && !todoInfo.description\n      && todoInfo.deadline === todaysDate\n      && todoInfo.subtaskList.length === 1\n      && !todoInfo.todoTag,\n  });\n\n  return (\n    <div className=\"add-todo-form__submit-buttons\">\n      <button\n        type=\"button\"\n        className={resetButtonClasses}\n        onClick={resetTodoFormFields}\n      >\n        Reset\n      </button>\n\n      <button\n        className={saveButtonClasses}\n        type=\"submit\"\n      >\n        Save\n      </button>\n    </div>\n  );\n};\n","// Core\nimport React from 'react';\n\n// Components\nimport { TitleInput } from './TitleInput';\nimport { DescriptionInput } from './DescriptionInput';\nimport { DeadlineInput } from './DeadlineInput';\nimport { CompleteInput } from './CompleteInput';\nimport { Checklist } from './Checklist';\nimport { Tagblock } from './TagBlock/Tagblock';\nimport { SubmitButtons } from './SubmitButtons';\n\n// Tools\nimport { useTodos } from '../../../../bus/todos/index';\nimport { formKeyDown } from '../../../../helpers';\n\n// Styles\nimport './TodoEditing.scss';\n\nexport const TodoEditing = () => {\n  const { changeSelectedTodoInfo, deleteTodo } = useTodos();\n\n  return (\n    <div className=\"app__add-todo-block add-todo-block\">\n      <form\n        onSubmit={changeSelectedTodoInfo}\n        onClick={event => event.stopPropagation()}\n        className=\"add-todo-block__add-todo-form add-todo-form\"\n        onKeyDown={formKeyDown}\n        role=\"presentation\"\n      >\n        <div className=\"add-todo-block__complete-delete-block\">\n          <CompleteInput />\n          <button\n            type=\"button\"\n            className=\"add-todo-form__delete-todo-btn\"\n            onClick={deleteTodo}\n          >\n            X\n          </button>\n        </div>\n        <div className=\"add-todo-form__main-menu\">\n          <TitleInput />\n          <DeadlineInput />\n          <DescriptionInput />\n          <Checklist />\n          <Tagblock />\n          <SubmitButtons />\n        </div>\n      </form>\n    </div>\n  );\n};\n","// Core\nimport React from 'react';\n\n// Tools\nimport { useTodos } from '../../../../bus/todos/index';\n\n// Components\nimport { TodoList } from '../TodoList';\nimport { AddTodoForm } from '../AddTodoForm';\nimport { TodoEditing } from '../TodoEditing';\n\n// Styles\nimport './TodoAppBody.scss';\n\nexport const TodoAppBody = () => {\n  const {\n    todoList,\n    visibleNewTaskForm,\n    visibilityTodoInfo,\n  } = useTodos();\n\n  if (!visibleNewTaskForm && !todoList.length) {\n    return (\n      <div className=\"app__todo-body todo-body todo-body-start-page\">\n        <div className=\"todo-body__start-page start-page\">\n          <div className=\"start-page__image\" />\n          <h3>No task found?</h3>\n          <span className=\"start-page__text\">\n            Try to assign more tasks to your\n            employees or create a new project from scratch\n          </span>\n        </div>\n      </div>\n    );\n  }\n\n  if (visibleNewTaskForm && !todoList.length) {\n    return (\n      <div className=\"app__todo-body todo-body todo-body-only-form\">\n        <AddTodoForm />\n      </div>\n    );\n  }\n\n  if (visibleNewTaskForm && todoList.length) {\n    return (\n      <div className=\"app__todo-body todo-body todo-body-full\">\n        <TodoList todoList={todoList} />\n        <AddTodoForm />\n      </div>\n    );\n  }\n\n  if (visibilityTodoInfo && todoList.length) {\n    return (\n      <div className=\"app__todo-body todo-body todo-body-full\">\n        <TodoList todoList={todoList} />\n        <TodoEditing />\n      </div>\n    );\n  }\n\n  if (!visibleNewTaskForm && todoList.length) {\n    return (\n      <div className=\"app__todo-body todo-body todo-body-only-todos\">\n        <TodoList todoList={todoList} />\n      </div>\n    );\n  }\n\n  return (\n    <span>Total Error</span>\n  );\n};\n","// Core\nimport React from 'react';\nimport { useTodos } from '../../bus/todos';\n\n// Styles\nimport './App.scss';\n\n// Components\nimport { NewTaskButton } from './components/NewTaskButton';\nimport { TodoAppBody } from './components/TodoAppBody';\n\nexport const App = () => {\n  const {\n    closeForms,\n  } = useTodos();\n\n  return (\n    <div\n      className=\"app\"\n      onClick={closeForms}\n      role=\"presentation\"\n    >\n      <NewTaskButton />\n      <TodoAppBody />\n    </div>\n  );\n};\n","// Core\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\n\n// Init\nimport { store } from './init/store';\n\n// App\nimport { App } from './view/pages/App';\n\nReactDOM.render(\n  <ReduxProvider store={store}>\n    <App />\n  </ReduxProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}